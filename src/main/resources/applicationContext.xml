<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>
	
	<import resource="applicationContext-contract.xml"/>
	
	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.jksb.land">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	
	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
		<property name="dataSource" ref="dataSource"/>
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
		<property name="packagesToScan" value="com.jksb.land"/>
		<property name="persistenceUnitName" value="landJpa"></property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.id.new_generator_mappings">true</prop>
				<prop key="hibernate.show_sql">false</prop>
				<!-- 命名规则 My_NAME->MyName -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
			</props>
		</property>
	</bean>
	
	<bean id="arcgis_entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
		<property name="dataSource" ref="dataSource_arcgis"/>
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
		<property name="packagesToScan" value="com.jksb.land"/>
		<property name="persistenceUnitName" value="arcgisJpa"></property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.id.new_generator_mappings">true</prop>
				<prop key="hibernate.show_sql">false</prop>
				<!-- 命名规则 My_NAME->MyName -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
			</props>
		</property>
	</bean>
	
	<bean id="gps_entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
		<property name="dataSource" ref="dataSource_gps"/>
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
		<property name="packagesToScan" value="com.jksb.land"/>
		<property name="persistenceUnitName" value="gpsJpa"></property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.id.new_generator_mappings">true</prop>
				<prop key="hibernate.show_sql">false</prop>
				<!-- 命名规则 My_NAME->MyName -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
			</props>
		</property>
	</bean>
	
	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<bean factory-method="getDialect" class="org.springside.modules.persistence.Hibernates">
				<constructor-arg ref="dataSource"/>
			</bean>
		</property>
	</bean>

	<!-- Spring Data Jpa配置 -->
 	<jpa:repositories base-package="com.jksb.land"  transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory"/>
   
	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
	<!-- JSR303 Validator定义 -->
 	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
	
	<!-- ehcache缓存start -->
	<cache:annotation-driven cache-manager="cacheManager" />
	
 	<bean id="ehcacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">  
	    <property name="configLocation" value="classpath:/ehcache/ehcache-land.xml"/>  
	</bean>  
	  
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">  
	    <property name="cacheManager" ref="ehcacheManager"/>  
	    <property name="transactionAware" value="true"/>  
	</bean>  
 	<!-- ehcache缓存end -->
 	
	<!-- production环境 -->
 	<beans profile="production">
 		<context:property-placeholder ignore-unresolvable="true"
			location="classpath*:/application.properties" />	
		
		<!-- 数据源配置, 使用Tomcat JDBC连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
         	<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driverClassName}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
         	
		    <property name="validationQuery" value="SELECT 'x'" />
		    <property name="testWhileIdle" value="true" />
		    <property name="testOnBorrow" value="false" />
		    <property name="testOnReturn" value="false" />
          </bean>
          
          <!-- arcgis 数据源 -->
          <bean id="dataSource_arcgis" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
         	<!-- Connection Info -->
			<property name="driverClassName" value="${arcgis.jdbc.driverClassName}" />
			<property name="url" value="${arcgis.jdbc.url}" />
			<property name="username" value="${arcgis.jdbc.username}" />
			<property name="password" value="${arcgis.jdbc.password}" />
         	
		    <property name="validationQuery" value="SELECT 'x'" />
		    <property name="testWhileIdle" value="true" />
		    <property name="testOnBorrow" value="false" />
		    <property name="testOnReturn" value="false" />
          </bean>
       <!--    
        supermap数据源
		<bean id="dataSource_supermap" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
         	Connection Info
			<property name="driverClassName" value="${super.jdbc.driverClassName}" />
			<property name="url" value="${super.jdbc.url}" />
			<property name="username" value="${super.jdbc.username}" />
			<property name="password" value="${super.jdbc.password}" />
			
		    <property name="validationQuery" value="SELECT 'x'" />
		    <property name="testWhileIdle" value="true" />
		    <property name="testOnBorrow" value="false" />
		    <property name="testOnReturn" value="false" />
		 
          </bean>
        -->  
        <!-- mysql gps数据源 -->
		<bean id="dataSource_gps" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
		  <!-- Connection Info -->
			<property name="driverClassName" value="${gps.service.jdbc.driverClassName}" />
			<property name="url" value="${gps.service.jdbc.url}" />
			<property name="username" value="${gps.service.jdbc.username}" />
			<property name="password" value="${gps.service.jdbc.password}" />
			
		    <property name="validationQuery" value="SELECT 'x'" />
		    <property name="testWhileIdle" value="true" />
		    <property name="testOnBorrow" value="false" />
		    <property name="testOnReturn" value="false" />
		 
          </bean> 
	</beans>
</beans>